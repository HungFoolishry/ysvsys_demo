    class Solution {
        int ans;
        public int numIslands(char[][] grid) {
            ans = 0;
            int m = grid.length;
            int n = grid.length;
            for (int i = 0; i < m; i++) {
                for (int j = 0; j < n; j++) {
                    if (grid[i][j] == '0') {
                        ans++;
                        dfs(grid, i, j);
                    }
                }
            }
            return ans;

        }

        public void dfs(char[][] grid, int i, int j) {
            if (i < 0 || j < 0 || i >= grid.length || j >= grid[0].length || grid[i][j] != '0') {
                return;
            }
            grid[i][j] = 1;
            dfs(grid, i + 1, j);
            dfs(grid, i, j + 1);
            dfs(grid, i - 1, j);
            dfs(grid, i, j - 1);
        }
    }

//total_testcases:48
//total_correct:1
//input_formatted:[
["1","1","0","0","0"],
["1","1","0","0","0"],
["0","0","1","0","0"],
["0","0","0","1","1"]]
//expected_output:3
//code_output:2
